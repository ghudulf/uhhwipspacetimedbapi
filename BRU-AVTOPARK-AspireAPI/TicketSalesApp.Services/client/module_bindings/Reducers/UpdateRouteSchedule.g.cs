// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void UpdateRouteScheduleHandler(ReducerEventContext ctx, uint scheduleId, uint? routeId, string? startPoint, string? endPoint, System.Collections.Generic.List<string>? routeStops, ulong? departureTime, ulong? arrivalTime, double? price, uint? availableSeats, System.Collections.Generic.List<string>? daysOfWeek, System.Collections.Generic.List<string>? busTypes, uint? stopDurationMinutes, bool? isRecurring, System.Collections.Generic.List<string>? estimatedStopTimes, System.Collections.Generic.List<double>? stopDistances, string? notes);
        public event UpdateRouteScheduleHandler? OnUpdateRouteSchedule;

        public void UpdateRouteSchedule(uint scheduleId, uint? routeId, string? startPoint, string? endPoint, System.Collections.Generic.List<string>? routeStops, ulong? departureTime, ulong? arrivalTime, double? price, uint? availableSeats, System.Collections.Generic.List<string>? daysOfWeek, System.Collections.Generic.List<string>? busTypes, uint? stopDurationMinutes, bool? isRecurring, System.Collections.Generic.List<string>? estimatedStopTimes, System.Collections.Generic.List<double>? stopDistances, string? notes)
        {
            conn.InternalCallReducer(new Reducer.UpdateRouteSchedule(scheduleId, routeId, startPoint, endPoint, routeStops, departureTime, arrivalTime, price, availableSeats, daysOfWeek, busTypes, stopDurationMinutes, isRecurring, estimatedStopTimes, stopDistances, notes), this.SetCallReducerFlags.UpdateRouteScheduleFlags);
        }

        public bool InvokeUpdateRouteSchedule(ReducerEventContext ctx, Reducer.UpdateRouteSchedule args)
        {
            if (OnUpdateRouteSchedule == null) return false;
            OnUpdateRouteSchedule(
                ctx,
                args.ScheduleId,
                args.RouteId,
                args.StartPoint,
                args.EndPoint,
                args.RouteStops,
                args.DepartureTime,
                args.ArrivalTime,
                args.Price,
                args.AvailableSeats,
                args.DaysOfWeek,
                args.BusTypes,
                args.StopDurationMinutes,
                args.IsRecurring,
                args.EstimatedStopTimes,
                args.StopDistances,
                args.Notes
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class UpdateRouteSchedule : Reducer, IReducerArgs
        {
            [DataMember(Name = "scheduleId")]
            public uint ScheduleId;
            [DataMember(Name = "routeId")]
            public uint? RouteId;
            [DataMember(Name = "startPoint")]
            public string? StartPoint;
            [DataMember(Name = "endPoint")]
            public string? EndPoint;
            [DataMember(Name = "routeStops")]
            public System.Collections.Generic.List<string>? RouteStops;
            [DataMember(Name = "departureTime")]
            public ulong? DepartureTime;
            [DataMember(Name = "arrivalTime")]
            public ulong? ArrivalTime;
            [DataMember(Name = "price")]
            public double? Price;
            [DataMember(Name = "availableSeats")]
            public uint? AvailableSeats;
            [DataMember(Name = "daysOfWeek")]
            public System.Collections.Generic.List<string>? DaysOfWeek;
            [DataMember(Name = "busTypes")]
            public System.Collections.Generic.List<string>? BusTypes;
            [DataMember(Name = "stopDurationMinutes")]
            public uint? StopDurationMinutes;
            [DataMember(Name = "isRecurring")]
            public bool? IsRecurring;
            [DataMember(Name = "estimatedStopTimes")]
            public System.Collections.Generic.List<string>? EstimatedStopTimes;
            [DataMember(Name = "stopDistances")]
            public System.Collections.Generic.List<double>? StopDistances;
            [DataMember(Name = "notes")]
            public string? Notes;

            public UpdateRouteSchedule(
                uint ScheduleId,
                uint? RouteId,
                string? StartPoint,
                string? EndPoint,
                System.Collections.Generic.List<string>? RouteStops,
                ulong? DepartureTime,
                ulong? ArrivalTime,
                double? Price,
                uint? AvailableSeats,
                System.Collections.Generic.List<string>? DaysOfWeek,
                System.Collections.Generic.List<string>? BusTypes,
                uint? StopDurationMinutes,
                bool? IsRecurring,
                System.Collections.Generic.List<string>? EstimatedStopTimes,
                System.Collections.Generic.List<double>? StopDistances,
                string? Notes
            )
            {
                this.ScheduleId = ScheduleId;
                this.RouteId = RouteId;
                this.StartPoint = StartPoint;
                this.EndPoint = EndPoint;
                this.RouteStops = RouteStops;
                this.DepartureTime = DepartureTime;
                this.ArrivalTime = ArrivalTime;
                this.Price = Price;
                this.AvailableSeats = AvailableSeats;
                this.DaysOfWeek = DaysOfWeek;
                this.BusTypes = BusTypes;
                this.StopDurationMinutes = StopDurationMinutes;
                this.IsRecurring = IsRecurring;
                this.EstimatedStopTimes = EstimatedStopTimes;
                this.StopDistances = StopDistances;
                this.Notes = Notes;
            }

            public UpdateRouteSchedule()
            {
            }

            string IReducerArgs.ReducerName => "UpdateRouteSchedule";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags UpdateRouteScheduleFlags;
        public void UpdateRouteSchedule(CallReducerFlags flags) => UpdateRouteScheduleFlags = flags;
    }
}
