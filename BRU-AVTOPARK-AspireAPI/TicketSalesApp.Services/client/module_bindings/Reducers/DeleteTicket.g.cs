// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void DeleteTicketHandler(ReducerEventContext ctx, uint ticketId, SpacetimeDB.Identity? actingUser);
        public event DeleteTicketHandler? OnDeleteTicket;

        public void DeleteTicket(uint ticketId, SpacetimeDB.Identity? actingUser)
        {
            conn.InternalCallReducer(new Reducer.DeleteTicket(ticketId, actingUser), this.SetCallReducerFlags.DeleteTicketFlags);
        }

        public bool InvokeDeleteTicket(ReducerEventContext ctx, Reducer.DeleteTicket args)
        {
            if (OnDeleteTicket == null) return false;
            OnDeleteTicket(
                ctx,
                args.TicketId,
                args.ActingUser
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class DeleteTicket : Reducer, IReducerArgs
        {
            [DataMember(Name = "ticketId")]
            public uint TicketId;
            [DataMember(Name = "actingUser")]
            public SpacetimeDB.Identity? ActingUser;

            public DeleteTicket(
                uint TicketId,
                SpacetimeDB.Identity? ActingUser
            )
            {
                this.TicketId = TicketId;
                this.ActingUser = ActingUser;
            }

            public DeleteTicket()
            {
            }

            string IReducerArgs.ReducerName => "DeleteTicket";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags DeleteTicketFlags;
        public void DeleteTicket(CallReducerFlags flags) => DeleteTicketFlags = flags;
    }
}
