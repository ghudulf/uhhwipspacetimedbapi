// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void UpdatePermissionHandler(ReducerEventContext ctx, uint permissionId, string? name, string? description, string? category, bool? isActive);
        public event UpdatePermissionHandler? OnUpdatePermission;

        public void UpdatePermission(uint permissionId, string? name, string? description, string? category, bool? isActive)
        {
            conn.InternalCallReducer(new Reducer.UpdatePermission(permissionId, name, description, category, isActive), this.SetCallReducerFlags.UpdatePermissionFlags);
        }

        public bool InvokeUpdatePermission(ReducerEventContext ctx, Reducer.UpdatePermission args)
        {
            if (OnUpdatePermission == null) return false;
            OnUpdatePermission(
                ctx,
                args.PermissionId,
                args.Name,
                args.Description,
                args.Category,
                args.IsActive
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class UpdatePermission : Reducer, IReducerArgs
        {
            [DataMember(Name = "permissionId")]
            public uint PermissionId;
            [DataMember(Name = "name")]
            public string? Name;
            [DataMember(Name = "description")]
            public string? Description;
            [DataMember(Name = "category")]
            public string? Category;
            [DataMember(Name = "isActive")]
            public bool? IsActive;

            public UpdatePermission(
                uint PermissionId,
                string? Name,
                string? Description,
                string? Category,
                bool? IsActive
            )
            {
                this.PermissionId = PermissionId;
                this.Name = Name;
                this.Description = Description;
                this.Category = Category;
                this.IsActive = IsActive;
            }

            public UpdatePermission()
            {
            }

            string IReducerArgs.ReducerName => "UpdatePermission";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags UpdatePermissionFlags;
        public void UpdatePermission(CallReducerFlags flags) => UpdatePermissionFlags = flags;
    }
}
