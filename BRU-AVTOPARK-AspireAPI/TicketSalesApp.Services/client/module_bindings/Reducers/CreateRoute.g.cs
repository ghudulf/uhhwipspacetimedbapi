// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void CreateRouteHandler(ReducerEventContext ctx, string startPoint, string endPoint, uint driverId, uint busId, string? travelTime, bool isActive);
        public event CreateRouteHandler? OnCreateRoute;

        public void CreateRoute(string startPoint, string endPoint, uint driverId, uint busId, string? travelTime, bool isActive)
        {
            conn.InternalCallReducer(new Reducer.CreateRoute(startPoint, endPoint, driverId, busId, travelTime, isActive), this.SetCallReducerFlags.CreateRouteFlags);
        }

        public bool InvokeCreateRoute(ReducerEventContext ctx, Reducer.CreateRoute args)
        {
            if (OnCreateRoute == null) return false;
            OnCreateRoute(
                ctx,
                args.StartPoint,
                args.EndPoint,
                args.DriverId,
                args.BusId,
                args.TravelTime,
                args.IsActive
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class CreateRoute : Reducer, IReducerArgs
        {
            [DataMember(Name = "startPoint")]
            public string StartPoint;
            [DataMember(Name = "endPoint")]
            public string EndPoint;
            [DataMember(Name = "driverId")]
            public uint DriverId;
            [DataMember(Name = "busId")]
            public uint BusId;
            [DataMember(Name = "travelTime")]
            public string? TravelTime;
            [DataMember(Name = "isActive")]
            public bool IsActive;

            public CreateRoute(
                string StartPoint,
                string EndPoint,
                uint DriverId,
                uint BusId,
                string? TravelTime,
                bool IsActive
            )
            {
                this.StartPoint = StartPoint;
                this.EndPoint = EndPoint;
                this.DriverId = DriverId;
                this.BusId = BusId;
                this.TravelTime = TravelTime;
                this.IsActive = IsActive;
            }

            public CreateRoute()
            {
                this.StartPoint = "";
                this.EndPoint = "";
            }

            string IReducerArgs.ReducerName => "CreateRoute";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags CreateRouteFlags;
        public void CreateRoute(CallReducerFlags flags) => CreateRouteFlags = flags;
    }
}
