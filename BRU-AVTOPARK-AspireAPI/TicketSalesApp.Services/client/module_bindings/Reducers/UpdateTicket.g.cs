// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void UpdateTicketHandler(ReducerEventContext ctx, uint ticketId, uint? routeId, uint? seatNumber, double? ticketPrice, string? paymentMethod, bool? isActive);
        public event UpdateTicketHandler? OnUpdateTicket;

        public void UpdateTicket(uint ticketId, uint? routeId, uint? seatNumber, double? ticketPrice, string? paymentMethod, bool? isActive)
        {
            conn.InternalCallReducer(new Reducer.UpdateTicket(ticketId, routeId, seatNumber, ticketPrice, paymentMethod, isActive), this.SetCallReducerFlags.UpdateTicketFlags);
        }

        public bool InvokeUpdateTicket(ReducerEventContext ctx, Reducer.UpdateTicket args)
        {
            if (OnUpdateTicket == null) return false;
            OnUpdateTicket(
                ctx,
                args.TicketId,
                args.RouteId,
                args.SeatNumber,
                args.TicketPrice,
                args.PaymentMethod,
                args.IsActive
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class UpdateTicket : Reducer, IReducerArgs
        {
            [DataMember(Name = "ticketId")]
            public uint TicketId;
            [DataMember(Name = "routeId")]
            public uint? RouteId;
            [DataMember(Name = "seatNumber")]
            public uint? SeatNumber;
            [DataMember(Name = "ticketPrice")]
            public double? TicketPrice;
            [DataMember(Name = "paymentMethod")]
            public string? PaymentMethod;
            [DataMember(Name = "isActive")]
            public bool? IsActive;

            public UpdateTicket(
                uint TicketId,
                uint? RouteId,
                uint? SeatNumber,
                double? TicketPrice,
                string? PaymentMethod,
                bool? IsActive
            )
            {
                this.TicketId = TicketId;
                this.RouteId = RouteId;
                this.SeatNumber = SeatNumber;
                this.TicketPrice = TicketPrice;
                this.PaymentMethod = PaymentMethod;
                this.IsActive = IsActive;
            }

            public UpdateTicket()
            {
            }

            string IReducerArgs.ReducerName => "UpdateTicket";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags UpdateTicketFlags;
        public void UpdateTicket(CallReducerFlags flags) => UpdateTicketFlags = flags;
    }
}
